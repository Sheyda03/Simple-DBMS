/// \mainpage Документация на DatabaseProject
///
/// \section intro Въведение
/// Проектът представлява опростена система за управление на база от данни (Simple DBMS), 
/// написана на C++. Поддържат се операции като създаване на таблици, добавяне на колони от различен тип, 
/// добавяне, редактиране, търсене и изтриване на редове.
///
/// \section task Анализ на задачата и подход за решение
/// Основната задача беше изграждане на обектно-ориентирана архитектура, която да поддържа основни 
/// операции върху база от данни, без външни библиотеки.
///
/// **Основни стъпки в решението:**
/// - Проектиране на базов клас `Column` и наследници (`IntColumn`, `DoubleColumn`, `StringColumn`, `DateColumn`)
/// - Изграждане на клас `Table`, съдържащ вектор от колони
/// - Изграждане на `Database` — колекция от таблици с възможност за отваряне/запис
/// - Създаване на команден интерфейс: `Command`, `CommandFactory`, `Invoker`, `App`
///
/// \section architecture Архитектура
/// **Основни класове:**
/// - `Column`: абстрактен базов клас за колони
/// - `IntColumn`, `DoubleColumn`, `StringColumn`, `DateColumn`: специфични типове
/// - `Table`: поддържа вектор от колони и операции над редове
/// - `Database`: колекция от таблици с операции за отваряне, запис, запазване
/// - `Command`: интерфейс за команди (като select, insert, update, delete)
/// - `Invoker`: отговаря за прочитането и изпълнението на команди
/// - `App`: управлява основния цикъл на програмата
///
/// \section challenges Проблеми и решения
/// - **Без `<sstream>`**: реализиран ръчен парсинг на команди чрез обхождане на символи
/// - **Без STL алгоритми**: използвани основно базови цикли и ръчна обработка
/// - **Сравнение на стойности по подниз**: реализирана функция `compareSubstr`
/// - **Типобезопасно сравнение**: чрез `Parser::tryParse<Type>()` методи
///
/// \section future Идеи за бъдещи подобрения
/// - Поддръжка на JOIN между таблици
/// - Възможност за сортиране на редове
/// - Поддръжка на условия с повече от едно сравнение (WHERE + AND/OR)
/// - Поддръжка на други типове
///
/// \section usage Използване на документацията
/// Навигацията в документацията се базира на:
/// - Класове — показват публични методи и полета
/// - Файлове — съдържат пълния API с документация
/// - Наследяване — визуализирано графично от Doxygen
